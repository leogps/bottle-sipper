# This workflow will build platform-specific distributable that can be run without python installed and
# makes it available under Github releases
name: Build Python Distributable

# Trigger the release workflow
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:  # Allows manual triggering

jobs:
  build-linux-x64:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    - name: Install dependencies
      run: |
        pip install --upgrade pip
    - name: Build distributable
      run: |
        pip install pyinstaller
        pip install -r requirements.txt
        pyinstaller sipper.py --clean --onefile --add-data sipper_core/templates/:sipper_core/templates/ --add-data static/:static/ --add-data sipper_core/:sipper_core/ --collect-submodules pkg_resources
        dist/sipper -h
    - name: Archive build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: bottle-sipper-linux-x64
        path: dist/*

  build-linux-arm64:
    runs-on: ubuntu-24.04-arm
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          pip install --upgrade pip
      - name: Build distributable
        run: |
          pip install pyinstaller
          pip install -r requirements.txt
          pyinstaller sipper.py --clean --onefile --add-data sipper_core/templates/:sipper_core/templates/ --add-data static/:static/ --add-data sipper_core/:sipper_core/ --collect-submodules pkg_resources
          dist/sipper -h
      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bottle-sipper-linux-arm64
          path: dist/*

  build-windows-x64:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python.exe -m pip install --upgrade pip
      - name: Build distributable
        run: |
          python.exe -m pip install pyinstaller
          python.exe -m pip install -r requirements.txt
          pyinstaller sipper.py --clean --onefile --add-data "sipper_core\templates\;sipper_core\templates\" --add-data "static\;static\" --add-data "sipper_core\;sipper_core\" --collect-submodules pkg_resources
          .\dist\sipper.exe -h
      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bottle-sipper-windows-x64
          path: dist/*

  build-macos-x64:
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          pip install --upgrade pip
      - name: Build distributable
        run: |
          pip install pyinstaller
          pip install -r requirements.txt
          pyinstaller sipper.py --clean --onefile --add-data sipper_core/templates/:sipper_core/templates/ --add-data static/:static/ --add-data sipper_core/:sipper_core/ --collect-submodules pkg_resources
          dist/sipper -h
      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bottle-sipper-macos-x64
          path: dist/*

  build-macos-arm64:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          pip install --upgrade pip
      - name: Build distributable
        run: |
          pip install pyinstaller
          pip install -r requirements.txt
          pyinstaller sipper.py --clean --onefile --add-data sipper_core/templates/:sipper_core/templates/ --add-data static/:static/ --add-data sipper_core/:sipper_core/ --collect-submodules pkg_resources
          dist/sipper -h
      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bottle-sipper-macos-arm64
          path: dist/*

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-linux-x64, build-linux-arm64, build-windows-x64, build-macos-x64, build-macos-arm64]
    steps:
      - name: Download Linux x64 Artifacts
        uses: actions/download-artifact@v4
        with:
          name: bottle-sipper-linux-x64
          path: dist/dist-linux-x64
      - name: Rename x64 Linux Artifact Files
        run: |
          cd dist/dist-linux-x64
          suffix="linux-x64"
          for file in *; do
            filename=$(basename -- "$file")
            extension="${filename##*.}"
            if [ "$extension" = "$filename" ]; then
              extension=""
            else
              extension=".$extension"
            fi
            filename_without_extension="${filename%.*}"
            new_filename="${filename_without_extension}-${suffix}${extension}"
            mv "$file" "$new_filename"
          done

      - name: Download Linux arm64 Artifacts
        uses: actions/download-artifact@v4
        with:
          name: bottle-sipper-linux-arm64
          path: dist/dist-linux-arm64
      - name: Rename arm64 Linux Artifact Files
        run: |
          cd dist/dist-linux-arm64
          suffix="linux-arm64"
          for file in *; do
            filename=$(basename -- "$file")
            extension="${filename##*.}"
            if [ "$extension" = "$filename" ]; then
              extension=""
            else
              extension=".$extension"
            fi
            filename_without_extension="${filename%.*}"
            new_filename="${filename_without_extension}-${suffix}${extension}"
            mv "$file" "$new_filename"
          done

      - name: Download Windows Artifacts
        uses: actions/download-artifact@v4
        with:
          name: bottle-sipper-windows-x64
          path: dist/dist-windows
      - name: Rename Windows Artifact Files
        run: |
          cd dist/dist-windows
          suffix="windows-x64"
          for file in *; do
            filename=$(basename -- "$file")
            extension="${filename##*.}"
            if [ "$extension" = "$filename" ]; then
              extension=""
            else
              extension=".$extension"
            fi
            filename_without_extension="${filename%.*}"
            new_filename="${filename_without_extension}-${suffix}${extension}"
            mv "$file" "$new_filename"
          done

      - name: Download macOS x64 Artifacts
        uses: actions/download-artifact@v4
        with:
          name: bottle-sipper-macos-x64
          path: dist/dist-macos-x64
      - name: Rename x64 macOS Artifact Files
        run: |
          cd dist/dist-macos-x64
          suffix="macos-x64"
          for file in *; do
            filename=$(basename -- "$file")
            extension="${filename##*.}"
            if [ "$extension" = "$filename" ]; then
              extension=""
            else
              extension=".$extension"
            fi
            filename_without_extension="${filename%.*}"
            new_filename="${filename_without_extension}-${suffix}${extension}"
            mv "$file" "$new_filename"
          done

      - name: Download macOS arm64 Artifacts
        uses: actions/download-artifact@v4
        with:
          name: bottle-sipper-macos-arm64
          path: dist/dist-macos-arm64
      - name: Rename arm64 macOS Artifact Files
        run: |
          cd dist/dist-macos-arm64
          suffix="macos-arm64"
          for file in *; do
            filename=$(basename -- "$file")
            extension="${filename##*.}"
            if [ "$extension" = "$filename" ]; then
              extension=""
            else
              extension=".$extension"
            fi
            filename_without_extension="${filename%.*}"
            new_filename="${filename_without_extension}-${suffix}${extension}"
            mv "$file" "$new_filename"
          done

      - name: Calculate Checksums
        run: |
          cd ${{ github.workspace }}
          cd dist
          declare -A checksum_algorithm_files
          checksum_algorithm_files["md5sum"]="MD5SUMS"
          checksum_algorithm_files["sha1sum"]="SHA1SUMS"
          checksum_algorithm_files["sha256sum"]="SHA256SUMS"
          checksum_algorithm_files["sha512sum"]="SHA512SUMS"
          for folder in dist-linux-x64 dist-linux-arm64 dist-windows dist-macos-x64 dist-macos-arm64; 
            do  
              for file in "$folder"/*; 
          	  do
          	    echo "calculating checksum for $file..."
          	    for algo in "${!checksum_algorithm_files[@]}"; do
          		  checksum_file="${checksum_algorithm_files[$algo]}"
          		  echo "Algorithm: $algo, Checksum file: $checksum_file"
          		  $algo "$file" | awk '{gsub(".*/", "", $2); print $1, $2}' >> "$checksum_file";
          		done
          	done; 
          done

      - name: Extract Tag Name
        id: extract_tag
        run: echo "TAG_NAME=$(basename ${{ github.ref }})" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: exe_${{ env.TAG_NAME }}
          release_name: Release ${{ env.TAG_NAME }} Executables
          draft: false
          prerelease: false

      - name: Upload Release Asset for Linux x64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/dist-linux-x64/sipper-linux-x64
          asset_name: sipper-linux-x64
          asset_content_type: application/octet-stream

      - name: Upload Release Asset for Linux arm64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/dist-linux-arm64/sipper-linux-arm64
          asset_name: sipper-linux-arm64
          asset_content_type: application/octet-stream

      - name: Upload Release Asset for Windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/dist-windows/sipper-windows-x64.exe
          asset_name: sipper-windows-x64.exe
          asset_content_type: application/octet-stream

      - name: Upload Release Asset for macOS x64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/dist-macos-x64/sipper-macos-x64
          asset_name: sipper-macos-x64
          asset_content_type: application/octet-stream

      - name: Upload Release Asset for macOS arm64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/dist-macos-arm64/sipper-macos-arm64
          asset_name: sipper-macos-arm64
          asset_content_type: application/octet-stream

      - name: Upload MD5SUMS
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_name: MD5SUMS
          asset_path: dist/MD5SUMS
          asset_content_type: text/plain

      - name: Upload SHA1SUMS
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_name: SHA1SUMS
          asset_path: dist/SHA1SUMS
          asset_content_type: text/plain

      - name: Upload SHA256SUMS
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_name: SHA256SUMS
          asset_path: dist/SHA256SUMS
          asset_content_type: text/plain

      - name: Upload SHA512SUMS
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_name: SHA512SUMS
          asset_path: dist/SHA512SUMS
          asset_content_type: text/plain

      - name: Set Release URL as Output
        id: set_release_url
        run: echo "RELEASE_URL=${{ steps.create_release.outputs.upload_url }}" >> $GITHUB_ENV

      - name: Display Release URL
        run: |
          echo "Release URL: ${{ env.RELEASE_URL }}"
